#!/usr/bin/env python
import script.output as output
import script.target as target

libprpc = target.lib(
    "libprpc",
    srcs = [
        target.re2c( "src/prpc/prpc/lex.re.c" ),
        "src/prpc/prpc/parse.c",
        "src/prpc/prpc/msg.c",
        "src/prpc/prpc/cmds.c"
    ],

    incdirs=["src/prpc"]
)

###############################

libmain = target.lib(
    "libmain",
    srcs = [
        "src/common/sys/ansiterm.c",
        "src/common/sys/log.c",
    ],

    incdirs=["src/common"]
)

example = target.executable(
    "example",
    srcs = [
        target.re2c("src/example/cmds.re.c"),
        "src/example/app.c",
        "src/example/main.c"
    ],

    incdirs=["src/common", "src/prpc"],

    aliases=["app"],

    objs=[libmain, libprpc]
)

libtest = target.lib(
    "libtest",
    srcs = [
        "tests/lib/test.c"
    ],

    incdirs = [
        "src/common",
        "src/prpc"
    ],

    objs = [ libmain ]
)

def add_test( name ):
    return target.executable(
        "tests/%s" % name,
        srcs    = [ "tests/%s.c" % name ],
        incdirs = ["src/prpc","src/common", "tests/lib"],
        objs=[libprpc, libtest, libmain]
    )

tests = [
    add_test("parse"),
    add_test("lex"),
    add_test("msg")
]

with open( "targets/autogen.ninja", "w" ) as fhandle:
    output.rules( fhandle, [example] + tests )

# MODIFIED
